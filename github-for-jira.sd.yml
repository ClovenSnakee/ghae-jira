buildNumber: 0.0.0
name: Github For Jira
description: Connect app for integrating GitHub into Jira
organization: Engineering-DevOps
notifications:
  email: fusion-arc@atlassian.com

compose:
  microservice:
    image: ${DOCKER_IMAGE_NAME}
    tag: ${DOCKER_IMAGE_TAG}
    ports:
      - 8080:8080

links:
  healthcheck:
    uri: healthcheck
  deepcheck:
    uri: deepcheck
  source:
    url: git@bitbucket.org:atlassian/github-jira-integration.git

cleanup: true

resources:
  - type: redis
    name: bottleneck
    attributes:
      snapshotRetention: 0
      config:
        maxmemory-policy: allkeys-lru
  - type: postgres-db
    name: database
  - type: globaledge
    name: ingress

scaling:
  instance: t2.small
  min: 1
  max: 5
  metrics:
    CPUUtilization:
      Threshold:
        Lower: 10
        Upper: 90
      Period:
        Lower: 300
        Upper: 120
      EvaluationPeriods: 2

config:
  environmentVariables:
    NODE_ENV: production
    NODE_OPTIONS: "--no-deprecation"
    LOG_LEVEL: info
    PORT: "8080"
    # * Commented out env vars are to be saved in secrets
    # APP_ID: Id of GitHub app
    # GITHUB_CLIENT_ID: GitHub app's client id
    # GITHUB_CLIENT_SECRET: GitHub app's client secret
    # PRIVATE_KEY: contents of your (*.pem) generated in the GitHub app
    # ATLASSIAN_URL: Jira instance url
    # STORAGE_SECRET: secret generated by running openssl rand -hex 32
    # SENTRY_DSN: client key required to connect to Sentry

workers:
  - name: Worker
    scaling:
      instance: t2.small
      min: 1
      max: 5
      metrics:
        CPUUtilization:
          Threshold:
            Lower: 10
            Upper: 90
          Period:
            Lower: 300
            Upper: 120
          EvaluationPeriods: 2


environmentOverrides:
  ddev:
    loadBalancer:
      type: ELB # needed for remote debugging, default is "ALB"
    compose:
      microservice:
        ports:
          - 8080:8080
          - 5005:5005 # remote debugging port (has to be 5005 because that is hard coded into Micros)
    links:
      remoteDebug: true
    config:
      environmentVariables:
        APP_URL: https://github-for-jira.dev.services.atlassian.com
        WEBHOOK_PROXY_URL: https://github-for-jira.dev.services.atlassian.com/github/events
        INSTANCE_NAME: github-for-jira-dev
        NODE_OPTIONS: "--no-deprecation"
        LOG_LEVEL: debug
        # * Commented out env vars are to be saved in secrets
        # WEBHOOK_SECRET: for signed signature when syncing an org
        # MICROS_ENV: micros environment for deployment
        # MICROS_ENVTYPE: the type of micros environment for deployment
  staging:
    config:
      environmentVariables:
        APP_URL: https://github-for-jira.stg.services.atlassian.com
        WEBHOOK_PROXY_URL: https://github-for-jira.stg.services.atlassian.com/github/events
        INSTANCE_NAME: github-for-jira-stg
        # * Commented out env vars are to be saved in secrets
        # WEBHOOK_SECRET: for signed signature when syncing an org
        # MICROS_ENV: micros environment for deployment
        # MICROS_ENVTYPE: the type of micros environment for deployment
    resources:
      - type: globaledge
        name: proxy
        attributes:
          default_vanity_dns: false
          domain:
            - github.stg.atlassian.com
          upstream_address:
            - address: jira-staging.githubapp.com

  prod:
    config:
      environmentVariables:
        APP_URL: https://github-for-jira.prod.services.atlassian.com
        INSTANCE_NAME: github-for-jira-production
    resources:
      - type: globaledge
        name: proxy
        attributes:
          default_vanity_dns: false
          domain:
            - github.atlassian.com
          upstream_address:
            - address: jira.github.com

